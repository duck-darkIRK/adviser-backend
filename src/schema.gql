# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Class {
  Id: ID!
  classCode: String!
  createdAt: DateTime!
  isDeleted: Boolean!
  size: Int!
  status: String
  students: [User!]
  subject: Subject!
  teachers: [User!]
  updatedAt: DateTime!
}

input ClassInput {
  Id: Float!
  classCode: String!
  createdAt: DateTime!
  isDeleted: Boolean!
  size: Int!
  status: String
  students: [UserInput!]
  subject: SubjectInput!
  teachers: [UserInput!]
  updatedAt: DateTime!
}

type Comment {
  Id: ID!
  content: String!
  createdAt: DateTime!
  likes: [User!]
  post: Post
  replies: [Comment!]
  reply: Comment
  replyMail: [Mail!]
  updatedAt: DateTime!
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mail {
  Id: ID!
  content: String!
  createdAt: DateTime!
  name: String!
  receiver: User!
  replyToCmt: Comment
  replyToMail: Mail
  replyToPost: Post
  sender: User!
  type: String!
  updatedAt: DateTime!
}

type Mailbox {
  Id: ID!
  createdAt: DateTime!
  isDeleted: Boolean!
  mailsCome: [Mail!]
  mailsTo: [Mail!]
  updatedAt: DateTime!
  user: User!
}

type Major {
  Id: ID!
  createdAt: DateTime!
  isDeleted: Boolean!
  majorName: String!
  subjects: [Subject!]!
  updatedAt: DateTime!
  users: [User!]!
}

input MajorInput {
  Id: String!
  isDeleted: Boolean
  subjects: [SubjectInput!]
  users: [UserInput!]
}

type Mutation {
  createMajor(createMajorDto: MajorInput!): Major!
  removeMajor(id: Float!): Boolean!
  updateMajor(id: Float!, updateMajorDto: MajorInput!): Major!
}

type Notification {
  Id: ID!
  comment: Comment
  createdAt: DateTime!
  isDeleted: Boolean!
  isPin: Boolean!
  isRead: Boolean!
  mail: Mail
  updatedAt: DateTime!
  user: User!
}

type Post {
  Id: ID!
  comments: [Comment!]!
  content: String
  createdAt: DateTime!
  image: [String]!
  likes: [User!]!
  reader: [User!]!
  reply: [Mail!]!
  title: String
  updatedAt: DateTime!
  user: User!
}

type Query {
  getAllMajors: [Major!]!
  getMajorById(id: Float!): Major
  queryUserById(id: String!): User
}

type Subject {
  Id: ID!
  classes: [Class!]!
  createdAt: DateTime!
  inTranscript: [Transcript!]
  isDeleted: Boolean!
  majors: [Major!]!
  subjectName: String!
  updatedAt: DateTime!
}

input SubjectInput {
  Id: String!
  classes: [ClassInput!]!
  createdAt: DateTime!
  inTranscript: [TranscriptInput!]
  isDeleted: Boolean!
  majors: [MajorInput!]!
  subjectName: String!
  updatedAt: DateTime!
}

type Timetable {
  Id: ID!
  createdAt: DateTime!
  isDeleted: Boolean!
  semester: Float!
  sheets: [TimetableSheet!]!
  updatedAt: DateTime!
  user: User!
  year: Float!
}

type TimetableSheet {
  Id: ID!
  class: String
  day: Float!
  time: Float!
  timetable: Timetable!
}

type Transcript {
  Id: ID!
  createdAt: DateTime!
  score: Float!
  subject: Subject!
  updatedAt: DateTime!
  user: User!
}

input TranscriptInput {
  score: Float!
  subject: SubjectInput!
  user: UserInput!
}

type User {
  Id: ID!
  avatar: String
  birthdate: DateTime
  classes: [Class!]
  code: Float!
  comments: [Comment!]
  createdAt: DateTime!
  email: String
  firstName: String!
  idPrefix: String!
  isBaned: Boolean!
  isOnline: Boolean!
  lastName: String!
  likedPosts: [Post!]
  mail: Mailbox
  majors: [Major!]
  notifications: [Notification!]
  password: String!
  phone: String
  posts: [Post!]
  readPosts: [Post!]
  refresh_token: String
  roles: [String!]
  teach: [Class!]
  timetables: [Timetable!]
  transcripts: [Transcript!]
  updatedAt: DateTime!
  username: String!
}

input UserInput {
  Id: String!
  avatar: String
  birthdate: DateTime
  code: Float!
  createdAt: DateTime!
  email: String
  firstName: String!
  idPrefix: String!
  isBaned: Boolean!
  isOnline: Boolean!
  lastName: String!
  majors: [String!]
  password: String
  phone: String
  refresh_token: String
  roles: [String!]
  transcripts: [String!]
  updatedAt: DateTime!
  username: String
}